#	$OpenBSD: pf.conf,v 1.55 2017/12/03 20:40:04 sthen Exp $
#
# See pf.conf(5) and /etc/examples/pf.conf

set skip on lo
block all

# allow inbound traffic to our machine only on
# the ssh port, and allow the same set of outbound
# services as we have previously
outservices = "{ domain, ntp, http, https, ssh}"
inservices = "{ https, ssh }"

pass in on egress proto tcp from any to egress \
    port $inservices
pass out on egress proto { tcp, udp } from egress to any \
    port $outservices

# vmnet: the set of valid IP addresses our virtual
# machine daemon will assign to our virtual machines
vmnet = "100.64.0.0/10"
# dns: the DNS server our VMs should reach out to
dns = "8.8.8.8"

# to talk to the inside world, VMs must first
# send their packets to the host. we block packets
# bound to the host directly, however, to reduce its'
# attack surface from untrusted VMs - except in some
# narrow circumstances.
pass in on tap proto { tcp, udp } from $vmnet to any \
    port $outservices
block in on tap proto { tcp, udp } from $vmnet to (tap)

# one exception to this rule is DNS - by default
# VMs assume we are a DNS resolver. we are not, so
# forward those packets on to a real DNS resolver
pass in on tap proto { tcp, udp } from $vmnet to (tap) \
    port domain rdr-to $dns

# another exception is traffic from worker VMs
# however, we should only allow one connection per
# virtual machine in, to ensure that VMs don't try
# to spam workerd or perform some sort of attack
workerport = 8123
pass in on tap proto tcp from $vmnet to (tap) \
    port $workerport keep state \
    (source-track rule, max-src-states 1, \
    tcp.closing 1, tcp.finwait 1, tcp.closed 1)

# non-DNS bound for destinations other than the host
# which we have accepted get sent through NAT to the
# outside world
pass out on egress proto { tcp, udp } from $vmnet to any \
    port $outservices nat-to (egress)

# By default, do not permit remote connections to X11
block return in on ! lo0 proto tcp to port 6000:6010

# Port build user does not need network
block return out log proto {tcp udp} user _pbuild
